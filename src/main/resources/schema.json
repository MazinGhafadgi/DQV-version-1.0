
{
  ""schema" : "http://vonneumann.com/schemas/myschema.json#",
  "type": "array",
  "uniqueItems": true,
  "items": {
    "$ref": "#/definitions/Welcome5Element"
  },
  "definitions": {
    "Welcome5Element": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "process.type": {
          "type": "string",
          "enum": ["Batch", "Streaming"]
        },
        "sink.type": {
          "type": "string",
          "enum": ["Console", "BigQuery"]
        },
        "quality.check.type": {
          "type": "string",
          "enum": ["Reconcile", "QualityCheck"]
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "target": {
          "$ref": "#/definitions/Target"
        },
        "rules": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/RuleElement"
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "quality.check.type": {
                "const": "Reconcile"
              }
            }
          },
          "then" : {
          "required": [
            "process.type",
            "rules",
            "sink.type",
            "source",
            "target"
          ]
          },
          "else": {
            "required": [
              "process.type",
              "rules",
              "sink.type",
              "quality.check.type",
              "source"
            ]
          }
        }],
      "title": "Welcome5Element"
    },
    "RuleElement": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rule": {
          "$ref": "#/definitions/RuleRule"
        }
      },
      "required": [
        "rule"
      ],
      "title": "RuleElement"
    },
    "RuleRule": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["NullCheck", "InRangeCheck", "NonNegativeCheck", "UniquenessCheck", "PositiveCheck", "EmailCheck", "MSISDNCheck", "ReconcileRule"]
        },
        "column": {
          "type": "string",
          "enum": ["customerID:STRING","gender:STRING","SeniorCitizen:STRING","Partner:STRING","Dependents:STRING","tenure:INTEGER","PhoneService:STRING","MultipleLines:STRING","InternetService:STRING","OnlineSecurity:STRING","OnlineBackup:STRING","DeviceProtection:STRING","TechSupport:STRING","StreamingTV:STRING","StreamingMovies:STRING","Contract:STRING","PaperlessBilling:STRING","PaymentMethod:STRING","MonthlyCharges:DOUBLE","TotalCharges:DOUBLE","Churn:STRING","EmailAddress:STRING"]
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "type",
        "column"
      ],
      "title": "RuleRule"
    },
    "Source": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "source.type": {
          "type": "string",
          "default" : "CSV",
          "enum": ["CSV", "Parquet", "BigQuery", "OneMore4"]
        },
        "source.path": {
          "type": "string",
          "default": "projectId.dataset.tableName"
        }
      },
      "if": {
        "properties": { "source.type": { "enum": ["CSV", "Parquet"] } }
      },
      "then": {
        "properties": { "source.path": { "pattern": "^gs://" } }
      },
      "else": {
        "properties": { "source.path": { "pattern": "[a-zA-Z0–9-_.]+\\.[a-zA-Z0–9-]+\\.[a-zA-Z0–9-]" } }
      },
      "required": [
        "source.path",
        "source.type"
      ],
      "title": "Source"
    },
    "Target": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "target.type": {
          "type": "string",
          "default" : "CSV",
          "enum": ["CSV", "Parquet", "BigQuery"]
        },
        "target.path": {
          "type": "string",
          "default": "projectId.dataset.tableName"
        }
      },
      "if": {
        "properties": { "target.type": { "enum": ["CSV", "Parquet"] } }
      },
      "then": {
        "properties": { "target.path": { "pattern": "^gs://" } }
      },
      "else": {
        "properties": { "target.path": { "pattern": "[a-zA-Z0–9-_.]+\\.[a-zA-Z0–9-]+\\.[a-zA-Z0–9-]" } }
      },
      "required": [
        "target.path",
        "target.type"
      ],
      "title": "Target"
    }
  }
}
        